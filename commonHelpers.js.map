{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["// ================================================================================================================================================================================\n\n// function filterArray(numbers, value) {\n//     let newArray = [];\n//     numbers.forEach(function (number, index){ \n//       if (number > value) {\n//         newArray.push(number)\n//       }\n//     })\n//     return newArray;\n//   }\n  \n//   console.log(filterArray([1, 2, 3, 4, 5], 3));\n//   console.log(filterArray([1, 2, 3, 4, 5], 4));\n//   console.log(filterArray([1, 2, 3, 4, 5], 5));\n//   console.log(filterArray([12, 24, 8, 41, 76], 38));\n//   console.log(filterArray([12, 24, 8, 41, 76], 20));\n\n// ================================================================================================================================================================================\n\n// const calculateTotalPrice = (quantity, pricePerItem) => {\n//     return quantity * pricePerItem;\n//   }\n\n//   console.log(calculateTotalPrice(5, 100));\n//   console.log(calculateTotalPrice(8, 60));\n//   console.log(calculateTotalPrice(3, 400));\n\n// ================================================================================================================================================================================\n\n// const calculateTotalPrice = (quantity, pricePerItem) => quantity * pricePerItem;\n\n// console.log(calculateTotalPrice(5, 100));\n// console.log(calculateTotalPrice(8, 60));\n// console.log(calculateTotalPrice(3, 400));\n\n// ================================================================================================================================================================================\n\n// const calculateTotalPrice = (orderedItems) => {\n//     let totalPrice = 0;\n  \n//     orderedItems.forEach((item) => {\n//       totalPrice += item;\n//     });\n  \n//     return totalPrice;\n//   }\n\n//   console.log(calculateTotalPrice([12, 85, 37, 4]));\n//   console.log(calculateTotalPrice([164, 48, 291]));\n//   console.log(calculateTotalPrice([412, 371, 94, 63, 176]));\n  \n// ================================================================================================================================================================================\n\n// function changeEven(numbers, value) {\n//     let newArray =[];\n\n//     for (let i = 0; i < numbers.length; i += 1) {\n//       if (numbers[i] % 2 === 0) {\n//         newArray.push(numbers[i] + value);\n//       } else {\n//         newArray.push(numbers[i]);\n//       }\n//     }\n//     return newArray;\n//   }\n  \n//   console.log(changeEven([1, 2, 3, 4, 5], 10));\n//   console.log(changeEven([2, 8, 3, 7, 4, 6], 10));\n//   console.log(changeEven([17, 24, 68, 31, 42], 100));\n//   console.log(changeEven([44, 13, 81, 92, 36, 54], 100));\n\n// ================================================================================================================================================================================\n\n// const planets = [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"];\n\n// const planetsLengths = planets.map(planet => planet.length );\n\n// console.log(planetsLengths);\n\n// ================================================================================================================================================================================\n\n// const books = [\n//     {\n//       title: \"The Last Kingdom\",\n//       author: \"Bernard Cornwell\",\n//       rating: 8.38,\n//     },\n//     {\n//       title: \"Beside Still Waters\",\n//       author: \"Robert Sheckley\",\n//       rating: 8.51,\n//     },\n//     {\n//       title: \"The Dream of a Ridiculous Man\",\n//       author: \"Fyodor Dostoevsky\",\n//       rating: 7.75,\n//     },\n//     { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n//     { title: \"Enemy of God\", author: \"Bernard Cornwell\", rating: 8.67 },\n//   ];\n  \n//   const titles = books.map( book => book.title);\n\n//   console.log(titles);\n\n// ================================================================================================================================================================================\n\n// const books = [\n//     {\n//       title: \"The Last Kingdom\",\n//       author: \"Bernard Cornwell\",\n//       genres: [\"adventure\", \"history\"],\n//     },\n//     {\n//       title: \"Beside Still Waters\",\n//       author: \"Robert Sheckley\",\n//       genres: [\"fiction\"],\n//     },\n//     {\n//       title: \"Redder Than Blood\",\n//       author: \"Tanith Lee\",\n//       genres: [\"horror\", \"mysticism\"],\n//     },\n//   ];\n  \n//   const genres = books.flatMap(book => book.genres);\n//   console.log(genres);\n  \n// ================================================================================================================================================================================\n\n// const users = [\n//     {\n//       name: \"Moore Hensley\",\n//       email: \"moorehensley@indexia.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Sharron Pace\"],\n//       isActive: false,\n//       balance: 2811,\n//       skills: [\"ipsum\", \"lorem\"],\n//       gender: \"male\",\n//       age: 37,\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       email: \"sharlenebush@tubesys.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"],\n//       isActive: true,\n//       balance: 3821,\n//       skills: [\"tempor\", \"mollit\", \"commodo\", \"veniam\", \"laborum\"],\n//       gender: \"female\",\n//       age: 34,\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       email: \"rossvazquez@xinware.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//       isActive: false,\n//       balance: 3793,\n//       skills: [\"nulla\", \"anim\", \"proident\", \"ipsum\", \"elit\"],\n//       gender: \"male\",\n//       age: 24,\n//     },\n//     {\n//       name: \"Elma Head\",\n//       email: \"elmahead@omatom.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//       isActive: true,\n//       balance: 2278,\n//       skills: [\"adipisicing\", \"irure\", \"velit\"],\n//       gender: \"female\",\n//       age: 21,\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       email: \"careybarr@nurali.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//       isActive: true,\n//       balance: 3951,\n//       skills: [\"ex\", \"culpa\", \"nostrud\"],\n//       gender: \"male\",\n//       age: 27,\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       email: \"blackburndotson@furnigeer.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//       isActive: false,\n//       balance: 1498,\n//       skills: [\"non\", \"amet\", \"ipsum\"],\n//       gender: \"male\",\n//       age: 38,\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       email: \"shereeanthony@kog.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//       isActive: true,\n//       balance: 2764,\n//       skills: [\"lorem\", \"veniam\", \"culpa\"],\n//       gender: \"female\",\n//       age: 39,\n//     },\n//   ];\n\n// const getUserEmails = (users) => {\n//     return users.map(user => user.email)\n//   };\n\n// console.log(getUserEmails(users));\n\n// ================================================================================================================================================================================\n\n// const numbers = [17, 24, 82, 61, 36, 18, 47, 52, 73];\n\n// const evenNumbers = numbers.filter(number => number % 2 === 0);\n// const oddNumbers = numbers.filter(number => number % 2 !== 0);\n\n// console.log(evenNumbers);\n// console.log(oddNumbers);\n\n// ================================================================================================================================================================================\n\n// const books = [\n//     {\n//       title: \"The Last Kingdom\",\n//       author: \"Bernard Cornwell\",\n//       rating: 8.38,\n//     },\n//     {\n//       title: \"Beside Still Waters\",\n//       author: \"Robert Sheckley\",\n//       rating: 8.51,\n//     },\n//     {\n//       title: \"Big Sur\",\n//       author: \"Jack Kerouac\",\n//       rating: 9.3,\n//     },\n//     { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n//     { title: \"Enemy of God\", author: \"Bernard Cornwell\", rating: 8.67 },\n//   ];\n  \n//   const MIN_RATING = 8;\n//   const AUTHOR = \"Bernard Cornwell\";\n  \n//   const topRatedBooks = books.filter(book => book.rating >= MIN_RATING);\n//   const booksByAuthor = books.filter(book => book.author === AUTHOR);\n  \n//   console.log(topRatedBooks);\n//   console.log(booksByAuthor);\n\n// ================================================================================================================================================================================\n\n// const users = [\n//     {\n//       name: \"Moore Hensley\",\n//       email: \"moorehensley@indexia.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Sharron Pace\"],\n//       isActive: false,\n//       balance: 2811,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       email: \"sharlenebush@tubesys.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"],\n//       isActive: true,\n//       balance: 3821,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       email: \"rossvazquez@xinware.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//       isActive: false,\n//       balance: 3793,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Elma Head\",\n//       email: \"elmahead@omatom.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//       isActive: true,\n//       balance: 2278,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       email: \"careybarr@nurali.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//       isActive: true,\n//       balance: 3951,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       email: \"blackburndotson@furnigeer.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//       isActive: false,\n//       balance: 1498,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       email: \"shereeanthony@kog.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//       isActive: true,\n//       balance: 2764,\n//       gender: \"female\"\n//     }\n//   ];\n\n//   const getUsersWithEyeColor = (users, color) => {\n//     const eyeColorFilter = users.filter(user => user.eyeColor === color);\n//     return eyeColorFilter;\n//   };\n\n//   console.log(getUsersWithEyeColor(users, \"blue\"));\n//   console.log(getUsersWithEyeColor(users, \"green\"));\n//   console.log(getUsersWithEyeColor(users, \"brown\"));\n\n// ================================================================================================================================================================================\n\n// const users = [\n//     {\n//       name: \"Moore Hensley\",\n//       email: \"moorehensley@indexia.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Sharron Pace\"],\n//       isActive: false,\n//       balance: 2811,\n//       gender: \"male\",\n//       age: 37\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       email: \"sharlenebush@tubesys.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"],\n//       isActive: true,\n//       balance: 3821,\n//       gender: \"female\",\n//       age: 34\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       email: \"rossvazquez@xinware.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//       isActive: false,\n//       balance: 3793,\n//       gender: \"male\",\n//       age: 24\n//     },\n//     {\n//       name: \"Elma Head\",\n//       email: \"elmahead@omatom.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//       isActive: true,\n//       balance: 2278,\n//       gender: \"female\",\n//       age: 21\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       email: \"careybarr@nurali.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//       isActive: true,\n//       balance: 3951,\n//       gender: \"male\",\n//       age: 27\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       email: \"blackburndotson@furnigeer.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//       isActive: false,\n//       balance: 1498,\n//       gender: \"male\",\n//       age: 38\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       email: \"shereeanthony@kog.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//       isActive: true,\n//       balance: 2764,\n//       gender: \"female\",\n//       age: 39\n//     }\n//   ];\n\n// const getUsersWithAge = (users, minAge, maxAge) => {\n//     return users.filter(user => user.age >= minAge && user.age <= maxAge);\n// };\n\n// console.log(getUsersWithAge(users, 20, 30));\n// console.log(getUsersWithAge(users, 30, 40));\n// console.log(getUsersWithAge(users, 80, 100));\n\n// ================================================================================================================================================================================\n\n// const books = [\n//     {\n//       title: \"The Last Kingdom\",\n//       author: \"Bernard Cornwell\",\n//       rating: 8.38,\n//     },\n//     {\n//       title: \"Beside Still Waters\",\n//       author: \"Robert Sheckley\",\n//       rating: 8.51,\n//     },\n//     {\n//         title: \"Big Sur\",\n//         author: \"Jack Kerouac\",\n//         rating: 9.3,\n//     },\n//     { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n//   ];\n//   const BOOK_TITLE = \"Big Sur\";\n//   const AUTHOR = \"Robert Sheckley\";\n  \n//   const bookWithTitle = books.find(book => book.title === BOOK_TITLE);\n//   const bookByAuthor = books.find(book => book.author === AUTHOR);\n  \n//   console.log(bookWithTitle);\n//   console.log(bookByAuthor);\n  \n// ================================================================================================================================================================================\n\n// const users = [\n//     {\n//       name: \"Moore Hensley\",\n//       email: \"moorehensley@indexia.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Sharron Pace\"],\n//       isActive: false,\n//       balance: 2811,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       email: \"sharlenebush@tubesys.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"],\n//       isActive: true,\n//       balance: 3821,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       email: \"rossvazquez@xinware.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//       isActive: false,\n//       balance: 3793,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Elma Head\",\n//       email: \"elmahead@omatom.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//       isActive: true,\n//       balance: 2278,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       email: \"careybarr@nurali.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//       isActive: true,\n//       balance: 3951,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       email: \"blackburndotson@furnigeer.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//       isActive: false,\n//       balance: 1498,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       email: \"shereeanthony@kog.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//       isActive: true,\n//       balance: 2764,\n//       gender: \"female\"\n//     }\n//   ];\n\n// const getUserWithEmail = (users, email) => {\n//     return users.find(user => user.email === email);\n      \n// };\n\n// console.log(getUserWithEmail(users, \"shereeanthony@kog.com\"));\n// console.log(getUserWithEmail(users, \"elmahead@omatom.com\"));\n// console.log(getUserWithEmail(users, \"blackburndotson@furnigeer.com\"));\n// console.log(getUserWithEmail(users, \"mmwdwadawd@gmail.com\"));\n\n// ================================================================================================================================================================================\n\n//  const users = [\n//     {\n//       name: \"Moore Hensley\",\n//       email: \"moorehensley@indexia.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Sharron Pace\"],\n//       isActive: false,\n//       balance: 2811,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       email: \"sharlenebush@tubesys.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"],\n//       isActive: true,\n//       balance: 3821,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       email: \"rossvazquez@xinware.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//       isActive: false,\n//       balance: 3793,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Elma Head\",\n//       email: \"elmahead@omatom.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//       isActive: true,\n//       balance: 2278,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       email: \"careybarr@nurali.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//       isActive: true,\n//       balance: 3951,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       email: \"blackburndotson@furnigeer.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//       isActive: false,\n//       balance: 1498,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       email: \"shereeanthony@kog.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//       isActive: true,\n//       balance: 2764,\n//       gender: \"female\"\n//     }\n//   ];\n\n// const isEveryUserActive = (users) => {\n//     return users.every(user => user.isActive === true);\n// };\n\n// console.log(isEveryUserActive(users));\n\n// const isAnyUserActive = (users) => {\n//     return users.some(user => user.isActive === true);\n// };\n\n// console.log(isAnyUserActive(users));\n\n// ================================================================================================================================================================================\n\n// const players = {\n//     mango: 1270,\n//     poly: 468,\n//     ajax: 710,\n//     kiwi: 244,\n//   };\n//   const playtimes = Object.values(players); // [1270, 468, 710, 244]\n  \n//   const totalPlayTime = playtimes.reduce((totalTime, userTime) => {\n//     return totalTime += userTime;\n//   }, 0);\n\n//   console.log(totalPlayTime);\n  \n//   const averagePlayTime = totalPlayTime / playtimes.length;\n\n// ================================================================================================================================================================================\n\n// const players = [\n//     { name: \"Mango\", playtime: 1270, gamesPlayed: 4 },\n//     { name: \"Poly\", playtime: 469, gamesPlayed: 2 },\n//     { name: \"Ajax\", playtime: 690, gamesPlayed: 3 },\n//     { name: \"Kiwi\", playtime: 241, gamesPlayed: 1 },\n//   ];\n  \n//   const totalAveragePlaytimePerGame = players.reduce((acc, user) => {\n//     return acc + user.playtime / user.gamesPlayed;\n//   }, 0);\n  \n//   console.log(totalAveragePlaytimePerGame);\n\n// ================================================================================================================================================================================\n\n// const users = [\n//     {\n//       name: \"Moore Hensley\",\n//       email: \"moorehensley@indexia.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Sharron Pace\"],\n//       isActive: false,\n//       balance: 2811,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       email: \"sharlenebush@tubesys.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"],\n//       isActive: true,\n//       balance: 3821,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       email: \"rossvazquez@xinware.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//       isActive: false,\n//       balance: 3793,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Elma Head\",\n//       email: \"elmahead@omatom.com\",\n//       eyeColor: \"green\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//       isActive: true,\n//       balance: 2278,\n//       gender: \"female\"\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       email: \"careybarr@nurali.com\",\n//       eyeColor: \"blue\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//       isActive: true,\n//       balance: 3951,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       email: \"blackburndotson@furnigeer.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//       isActive: false,\n//       balance: 1498,\n//       gender: \"male\"\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       email: \"shereeanthony@kog.com\",\n//       eyeColor: \"brown\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//       isActive: true,\n//       balance: 2764,\n//       gender: \"female\"\n//     }\n// ];\n\n// const calculateTotalBalance = (users) => {\n//     return users.reduce((balance, user) => {\n//         return balance += user.balance;\n//     }, 0)\n// };\n\n// console.log(calculateTotalBalance(users));\n\n// ================================================================================================================================================================================\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n// const authors = [\n//   \"Tanith Lee\",\n//   \"Bernard Cornwell\",\n//   \"Robert Sheckley\",\n//   \"Jack Kerouac\",\n// ];\n\n// const ascendingReleaseDates = releaseDates.toSorted();\n\n// const alphabeticalAuthors = authors.toSorted();\n\n// console.log(ascendingReleaseDates);\n// console.log(alphabeticalAuthors);\n\n// ================================================================================================================================================================================\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n\n// const ascendingReleaseDates = releaseDates.toSorted((a, b) => a - b);\n\n// const descendingReleaseDates = releaseDates.toSorted((a, b) => b - a);\n\n// console.log(ascendingReleaseDates);\n// console.log(descendingReleaseDates);\n\n// ================================================================================================================================================================================\n\n// const authors = [\n//     \"Tanith Lee\",\n//     \"Bernard Cornwell\",\n//     \"Robert Sheckley\",\n//     \"Jack Kerouac\",\n//     \"Howard Lovecraft\",\n// ];\n  \n// const authorsInAlphabetOrder = authors.toSorted((a, b) => a.localeCompare(b));\n  \n// const authorsInReversedOrder = authors.toSorted((a, b) => b.localeCompare(a));\n  \n// console.log(authorsInAlphabetOrder);\n// console.log(authorsInReversedOrder);\n\n// ================================================================================================================================================================================\n\n\n// const books = [\n//     {\n//       title: \"The Last Kingdom\",\n//       author: \"Bernard Cornwell\",\n//       rating: 8.38,\n//     },\n//     {\n//       title: \"Beside Still Waters\",\n//       author: \"Robert Sheckley\",\n//       rating: 8.51,\n//     },\n//     {\n//       title: \"Big Sur\",\n//       author: \"Jack Kerouac\",\n//       rating: 9.3,\n//     },\n//     {\n//       title: \"Redder Than Blood\",\n//       author: \"Tanith Lee\",\n//       rating: 7.94,\n//     },\n//     {\n//       title: \"Enemy of God\",\n//       author: \"Bernard Cornwell\",\n//       rating: 8.67,\n//     },\n// ];\n  \n// const sortedByAuthorName = books.toSorted((firstAuthor, secondAuthor) => \n//     firstAuthor.author.localeCompare(secondAuthor.author));\n  \n// const sortedByReversedAuthorName = books.toSorted((firstAuthor, secondAuthor) => \n//     secondAuthor.author.localeCompare(firstAuthor.author));\n  \n// const sortedByAscendingRating = books.toSorted((firstRate, secondRate) => \n//     firstRate.rating - secondRate.rating);\n  \n// const sortedByDescentingRating = books.toSorted((firstRate, secondRate) => \n//     secondRate.rating - firstRate.rating);\n\n// console.log(sortedByAuthorName);\n// console.log(sortedByReversedAuthorName);\n// console.log(sortedByAscendingRating);\n// console.log(sortedByDescentingRating);\n\n// ================================================================================================================================================================================\n\n// const books = [\n//     {\n//       title: \"The Last Kingdom\",\n//       author: \"Bernard Cornwell\",\n//       rating: 8.38,\n//     },\n//     {\n//       title: \"Beside Still Waters\",\n//       author: \"Robert Sheckley\",\n//       rating: 8.51,\n//     },\n//     {\n//         title: \"Big Sur\",\n//         author: \"Jack Kerouac\",\n//         rating: 9.3,\n//     },\n//     { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n//     {\n//       title: \"The Dreams in the Witch House\",\n//       author: \"Howard Lovecraft\",\n//       rating: 8.67,\n//     },\n// ];\n// const MIN_BOOK_RATING = 8;\n  \n// const names = books\n//     .filter(book => book.rating >= MIN_BOOK_RATING)\n//     .map(author => author.author)\n//     .toSorted((firstAuthor, secondAuthor) => firstAuthor.localeCompare(secondAuthor));\n\n// console.log(names);\n\n// ================================================================================================================================================================================\n\n// const pizzaPalace = {\n//     pizzas: [\"Supercheese\", \"Smoked\", \"Four meats\"],\n//     checkPizza(pizzaName) {\n//       return this.pizzas.includes(pizzaName);\n//     },\n//     order(pizzaName) {\n//       const isPizzaAvailable = this.checkPizza(pizzaName);\n  \n//       if (!isPizzaAvailable) {\n//         return `Sorry, there is no pizza named «${pizzaName}»`;\n//       }\n  \n//       return `Order accepted, preparing «${pizzaName}» pizza`;\n//     },\n// };\n\n// console.log(pizzaPalace.order(\"Smoked\"));\n// console.log(pizzaPalace.order(\"Four meats\"));\n// console.log(pizzaPalace.order(\"Big Mike\"));\n// console.log(pizzaPalace.order(\"Viennese\"));\n\n// ================================================================================================================================================================================\n\n// const parent = {\n//     name: \"Stacey\",\n//     surname: \"Moore\",\n//     age: 54,\n//     heritage: \"Irish\",\n// };\n  \n// const child = Object.create(parent);\n// child.name = \"Jason\";\n// child.age = 27;\n  \n// console.log(parent.hasOwnProperty(\"surname\"));\n// console.log(parent.hasOwnProperty(\"heritage\"));\n// console.log(child.hasOwnProperty(\"name\"));\n// console.log(child.name);\n// console.log(child.hasOwnProperty(\"age\"));\n// console.log(child.age);\n// console.log(child.hasOwnProperty(\"surname\"));\n// console.log(child.surname);\n// console.log(child.hasOwnProperty(\"heritage\"));\n// console.log(child.heritage);\n// console.log(parent.isPrototypeOf(child));\n\n// ================================================================================================================================================================================\n\n// const ancestor = {\n//     name: \"Paul\",\n//     age: 83,\n//     surname: \"Dawson\",\n//     heritage: \"Irish\",\n// };\n  \n// const parent = Object.create(ancestor);\n// parent.name = \"Stacey\";\n// parent.surname = \"Moore\";\n// parent.age = 54;\n  \n// const child = Object.create(parent);\n// child.name = \"Jason\";\n// child.age = 27;\n\n// console.log(ancestor.isPrototypeOf(\"parent\"));\n// console.log(parent.isPrototypeOf(\"child\"));\n// console.log(ancestor.hasOwnProperty(\"surname\"));\n// console.log(ancestor.surname);\n// console.log(parent.hasOwnProperty(\"surname\"));\n// console.log(parent.surname);\n// console.log(child.hasOwnProperty(\"surname\"));\n// console.log(child.surname);\n// console.log(ancestor.hasOwnProperty(\"heritage\"));\n// console.log(ancestor.heritage);\n// console.log(parent.hasOwnProperty(\"heritage\"));\n// console.log(parent.heritage);\n// console.log(child.hasOwnProperty(\"heritage\"));\n// console.log(child.heritage);\n\n// ================================================================================================================================================================================\n\n// class Car{\n//     constructor(brand, model, price){\n//         this.brand = brand;\n//         this.model = model;\n//         this.price = price;\n//     }\n// }\n\n// const brz = new Car(\"SUBARU\", \"BRZ\", 35000);\n// console.log(brz);\n\n// const gt = new Car(\"TOYOTA\", \"GT-86\", 33000);\n// console.log(gt);\n\n// const frs = new Car(\"SCION\", \"FR-S\", 17000);\n// console.log(frs);\n\n// ================================================================================================================================================================================\n\n// class Car{\n//     constructor(params){\n//         this.brand = params.brand;\n//         this.model = params.model;\n//         this.price = params.price;\n//     }\n// }\n\n// const brz = new Car({\n//     brand: \"SUBARU\", \n//     model: \"BRZ\", \n//     price: 35000\n// });\n// console.log(brz);\n\n// const gt = new Car({\n//     brand: \"TOYOTA\", \n//     model: \"GT-86\", \n//     price: 33000\n// });\n// console.log(gt);\n\n// const frs = new Car({\n//     brand: \"SCION\", \n//     model: \"FR-S\", \n//     price: 17000\n// });\n// console.log(frs);\n\n// ================================================================================================================================================================================\n\n// class Car{\n//     constructor(params){\n//         this.brand = params.brand;\n//         this.model = params.model;\n//         this.price = params.price;\n//     }\n\n//     getPrice() {\n//         return this.price;\n//     }\n\n//     changePrice(newPrice){\n//         this.price = newPrice;\n//     }\n// }\n\n// const brz = new Car({\n//     brand: \"SUBARU\", \n//     model: \"BRZ\", \n//     price: 35000\n// });\n// console.log(brz);\n// brz.getPrice();\n// brz.changePrice(38000);\n// console.log(brz);\n\n// const gt = new Car({\n//     brand: \"TOYOTA\", \n//     model: \"GT-86\", \n//     price: 33000\n// });\n// console.log(gt);\n\n// const frs = new Car({\n//     brand: \"SCION\", \n//     model: \"FR-S\", \n//     price: 17000\n// });\n// console.log(frs);\n\n// ================================================================================================================================================================================\n\n// class Car{\n//     #brand;\n//     model;\n//     price;\n\n//     constructor(params){\n//         this.#brand = params.brand;\n//         this.model = params.model;\n//         this.price = params.price;\n//     }\n\n//     getBrand(){\n//         return this.#brand;\n//     }\n\n//     changeBrand(newBrand){\n//         this.#brand = newBrand;\n//     }\n\n//     getPrice() {\n//         return this.price;\n//     }\n\n//     changePrice(newPrice){\n//         this.price = newPrice;\n//     }\n// }\n\n// const brz = new Car({\n//     brand: \"SUBARU\", \n//     model: \"BRZ\", \n//     price: 35000\n// });\n\n// console.log(brz);\n// console.log(brz.getPrice());\n// brz.changePrice(38000);\n// console.log(brz);\n// console.log(brz.getBrand());\n// brz.changeBrand(\"SUBAWU\");\n// console.log(brz);\n\n// const gt = new Car({\n//     brand: \"TOYOTA\", \n//     model: \"GT-86\", \n//     price: 33000\n// });\n// console.log(gt);\n\n// const frs = new Car({\n//     brand: \"SCION\", \n//     model: \"FR-S\", \n//     price: 17000\n// });\n// console.log(frs);\n\n// ================================================================================================================================================================================\n\n// class Car {\n//     #brand;\n//     #model;\n//     #price;\n    \n//     constructor(params) {\n//       this.#brand = params.brand;\n//       this.#model = params.model;\n//       this.#price = params.price;\n//     }\n  \n//     get brand() {\n//       return this.#brand;\n//     }\n  \n//     set brand(newBrand) {\n//       this.#brand = newBrand;\n//     }\n  \n//     get model() {\n//       return this.#model;\n//     }\n  \n//     set model(newModel) {\n//       this.#model = newModel;\n//     }\n  \n//     get price() {\n//       return this.#price;\n//     }\n  \n//     set price(newPrice) {\n//       this.#price = newPrice;\n//     }\n// }\n\n// const brz = new Car({\n//     brand: \"SUBARU\", \n//     model: \"BRZ\", \n//     price: 35000\n// });\n\n\n// const gt = new Car({\n//     brand: \"TOYOTA\", \n//     model: \"GT-86\", \n//     price: 33000\n// });\n// console.log(gt);\n\n// const frs = new Car({\n//     brand: \"SCION\", \n//     model: \"FR-S\", \n//     price: 17000\n// });\n// console.log(frs);\n\n// ================================================================================================================================================================================\n\n// class Car {\n//     static maxPrice = 50000;\n//     #price;\n  \n//     constructor(params) {\n//       this.#price = params.price;\n//     }\n  \n//     get price() {\n//       return this.#price;\n//     }\n  \n//     set price(newPrice) {\n//         if (newPrice <= Car.maxPrice) {\n//             this.#price = newPrice;\n//         }\n      \n//     }\n//   }\n  \n//   const audi = new Car({ price: 35000 });\n//   console.log(audi.price);\n  \n//   audi.price = 49000;\n//   console.log(audi.price);\n  \n//   audi.price = 51000;\n//   console.log(audi.price);\n\n// ================================================================================================================================================================================\n\n// class Car {\n//     static #maxPrice = 50000;\n//     static checkPrice(price){\n//         if (price < Car.#maxPrice) {\n//             return \"Success! Price is within acceptable limits\";\n//         } else {\n//             return \"Error! Price exceeds the maximum\";\n//         }\n//     };\n  \n//     constructor(params) {\n//       this.price = params.price;\n//     }\n//   }\n  \n//   const audi = new Car({ price: 36000 });\n//   const bmw = new Car({ price: 64000 });\n  \n//   console.log(Car.checkPrice(audi.price)); // \"Success! Price is within acceptable limits\"\n//   console.log(Car.checkPrice(bmw.price)); // \"Error! Price exceeds the maximum\"\n\n// ================================================================================================================================================================================\n\n// class User {\n\n//     constructor(email) {\n//       this.email = email;\n//     }\n  \n//     get email() {\n//       return this.email;\n//     }\n  \n//     set email(newEmail) {\n//       this.email = newEmail;\n//     }\n// }\n\n// class Admin extends User {\n\n//     static role = {\n//         BASIC: \"basic\", \n//         SUPERUSER: \"superuser\"\n//     }\n// }\n\n// console.log(Admin.role.BASIC);\n// console.log(Admin.role.SUPERUSER);\n\n// ================================================================================================================================================================================\n\n// class User {\n//     email;\n  \n//     constructor(email) {\n//       this.email = email;\n//     }\n  \n//     get email() {\n//       return this.email;\n//     }\n  \n//     set email(newEmail) {\n//       this.email = newEmail;\n//     }\n//   }\n  \n//   class Admin extends User {\n//     access;\n//     static role = {\n//       BASIC: \"basic\",\n//       SUPERUSER: \"superuser\",\n//     };\n//     constructor(params) {\n//         super(params.email)\n//         this.access = params.access;\n\n//     }\n//   }\n  \n//   const mango = new Admin({\n//     email: \"mango@mail.com\",\n//     access: Admin.role.SUPERUSER,\n//   });\n  \n//   console.log(mango.email); // \"mango@mail.com\"\n//   console.log(mango.access); // \"superuser\"\n\n// ================================================================================================================================================================================\n\nclass User {\n    email;\n  \n    constructor(email) {\n      this.email = email;\n    }\n  \n    get email() {\n      return this.email;\n    }\n  \n    set email(newEmail) {\n      this.email = newEmail;\n    }\n}\n\nclass Admin extends User {\n    blacklistedEmails = [];\n\n    static role = {\n      BASIC: \"basic\",\n      SUPERUSER: \"superuser\",\n    };\n  \n    constructor(params) {\n      super(params.email);\n      this.access = params.access;\n    }\n\n    blacklist(email){\n        return this.blacklistedEmails.push(email);\n    }\n    \n    isBlacklisted(email){\n        return this.blacklistedEmails.includes(email)\n    }\n}\n  \nconst mango = new Admin({\n    email: \"mango@mail.com\",\n    access: Admin.role.SUPERUSER,\n});\n  \nconsole.log(mango.email); // \"mango@mail.com\"\nconsole.log(mango.access); // \"superuser\"\n  \nmango.blacklist(\"poly@mail.com\");\nconsole.log(mango.blacklistedEmails); // [\"poly@mail.com\"]\nconsole.log(mango.isBlacklisted(\"mango@mail.com\")); // false\nconsole.log(mango.isBlacklisted(\"poly@mail.com\")); // true\n  "],"names":["User","email","__publicField","newEmail","Admin","params","mango"],"mappings":"82BAsuCA,MAAMA,CAAK,CAGP,YAAYC,EAAO,CAFnBC,EAAA,cAGE,KAAK,MAAQD,CACd,CAED,IAAI,OAAQ,CACV,OAAO,KAAK,KACb,CAED,IAAI,MAAME,EAAU,CAClB,KAAK,MAAQA,CACd,CACL,CAEA,MAAMC,UAAcJ,CAAK,CAQrB,YAAYK,EAAQ,CAClB,MAAMA,EAAO,KAAK,EARpBH,EAAA,yBAAoB,CAAA,GASlB,KAAK,OAASG,EAAO,MACtB,CAED,UAAUJ,EAAM,CACZ,OAAO,KAAK,kBAAkB,KAAKA,CAAK,CAC3C,CAED,cAAcA,EAAM,CAChB,OAAO,KAAK,kBAAkB,SAASA,CAAK,CAC/C,CACL,CAjBIC,EAHEE,EAGK,OAAO,CACZ,MAAO,QACP,UAAW,WACjB,GAgBA,MAAME,EAAQ,IAAIF,EAAM,CACpB,MAAO,iBACP,OAAQA,EAAM,KAAK,SACvB,CAAC,EAED,QAAQ,IAAIE,EAAM,KAAK,EACvB,QAAQ,IAAIA,EAAM,MAAM,EAExBA,EAAM,UAAU,eAAe,EAC/B,QAAQ,IAAIA,EAAM,iBAAiB,EACnC,QAAQ,IAAIA,EAAM,cAAc,gBAAgB,CAAC,EACjD,QAAQ,IAAIA,EAAM,cAAc,eAAe,CAAC"}